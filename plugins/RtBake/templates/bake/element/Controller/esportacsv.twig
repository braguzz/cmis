   /**
     * Esportacsv method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */
{% set compact = ["'#{pluralName}'"] %}     
   
    public function esportacsv()
    {
    ${{ currentModelName }} = $this->{{ currentModelName }}->newEmptyEntity();
    $this->Authorization->authorize(${{ currentModelName }});
     
  //aumenta il tempo massimo consentito per l'esecuzione (default 120 secondi)
        ini_set('max_execution_time', '600');    //in secondi
        //aumenta la memoria
        ini_set('memory_limit', '512M');

          $filtroCookie = json_decode($this->request->getCookie('filtroCookie'));
  
     $query = $this->{{ currentModelName }} 
     ->find('search', ['search' => $filtroCookie]);
    
{% set belongsTo = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% if belongsTo %}
    $query=$query->contain([{{ Bake.stringifyList(belongsTo, {'indent': false})|raw }}]);
{% endif %}
        ${{ pluralName }} = $query->toArray();

                
        
        
    //    $this->set(compact('{{ pluralName }}'));
        
          
{% set associations = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% set associations = associations|merge(Bake.aliasExtractor(modelObj, 'BelongsToMany')) %}

{%- for assoc in associations %}
    {%- set otherName = Bake.getAssociatedTableAlias(modelObj, assoc) %}
    {%- set otherPlural = otherName|variable %}
        ${{ otherPlural }} = $this->{{ currentModelName }}->{{ otherName }}->find('list', ['limit' => 200]);
        {{- "\n" }}
    {%- set compact = compact|merge(["'#{otherPlural}'"]) %}
{% endfor %}
       $this->set(compact({{ compact|join(', ')|raw }}));   
          
        
    }
    
        
    


