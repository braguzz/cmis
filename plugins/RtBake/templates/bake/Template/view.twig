<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }} ${{ singularVar }}
 */
?>


<!-- Fa vedere tramite TAB le righe delle tabelle collegate -->
<!-- Se la relazione e' 1:n e' possibile inserire un nuova riga -->
<!-- per l'inserimento si lancia semplicemente il controller add della tabella correlata -->
<!-- con i parametri di ritorno -->
<!-- Se la relazione e' n:m oltre ad inserire e' possibile scegliere fra righe gia presenti -->
<!-- per questa ricerca si chiama il controller indexexternal con i parametri di ritorno -->
<!--  -->
<!-- Per 1:n in ogni riga e' presente il bottone rimuovi che lancia il JS Remove-->
<!-- che, tramite chiamata Ajax al controller removeAjaxBelong cancella la riga dal DB e al ritorno -->
<!-- si preoccupa di togliere la riga dalla table html -->
<!-- nelle righe con n:m e' anche presente il bottone removehabtm che tramite il JS RemoveHABTM -->
<!-- fa la stessa cosa ma rimuove il collegamento fra le due tabelle -->
<!--  -->
<!--  -->
<script>
function Remove(data) {
        if (confirm("Sei sicuro di Cancellare?")) {   
            var nomes = data.from;
            var targeturl = MYAPP + '/' + nomes + '/removeajaxbelong/' + data.fromid;
            jQuery.ajax({
                type: 'post',
                async: true,
                cache: false,
                url: targeturl,
                success: function (response) {
                if (response.error === '0') {
                    $('.' + nomes + '_id_' + data.fromid).remove();
                     }
                } 
            });
            return false;
        }
        return false;
    };
    
 function RemoveHABTM(data) {
     console.log(data)
        if (confirm("Sei sicuro di rimuovere il collegamento?")) {
            var nomes = data.from;
            var targeturl = MYAPP + '/' + nomes + '/removehabtmajaxbelong/' + data.fromid;
            jQuery.ajax({
                type: 'post',
                async: true,
                cache: false,
                url: targeturl,
                success: function (response) {
                      $('.' + nomes + '_id_' + data.fromid).remove();
                },
                data: {data}
            });
            return false;
        }
        return false;

    };  


</script>


<?php $this->extend('/layout/TwitterBootstrap/dashboard'); ?>
{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}


{# PB: Dati Tabella Principale #}
<div class="{{ pluralVar }} view large-9 medium-8 columns content">
    
 <!-- ========= PB: TITOLO CON RELATIVI BOTTONI ====================== -->
<div class="titolo_pulsanti">
<div class="row align-items-center mb-2">  
<div class="col col-sm-auto">
    <h1 class="page-header">{{ singularHumanName }}: <?= h(${{ singularVar }}->{{ displayField }}) ?></h1>
 </div>  
 <div class="col-10 col-sm-auto">
     <div class="btn-group" role="group">
<?= $this->Html->link('', ['action' => 'edit', {{ pK|raw }}], ['title' => __('Edit'), 'class' => 'btn btn-outline-dark bi-pencil mr-1']) ?>
 <?= $this->Html->link('', ['action' => 'add', {{ pK|raw }}], ['title' => __('Add'), 'class' => 'btn btn-outline-info bi-plus-lg mr-1']) ?>
<?= $this->Form->postLink('', ['action' => 'delete', {{ pK|raw }}], ['confirm' => __('Sei sicuro di rimuovere # {0}?', {{ pK|raw }}), 'title' => __('Delete'), 'class' => 'btn btn-danger bi-trash mr-1']) ?>

 </div>
 </div>

 </div>
</div>
<!-- PB: Fine titolo con bottoni -->


    <div class="table-responsive">
        <table class="table table-striped table-sm">
{% if groupedFields['string'] %}
{% for field in groupedFields['string'] %}
{% if associationFields[field] %}
{% set details = associationFields[field] %}
            <tr class="col-2">
                <th scope="row" class="col-2"><?= __('{{ details.property|humanize }}') ?></th>
                <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
            </tr>
{% else %}
            <tr>
                <th scope="row"><?= __('{{ field|humanize }}') ?></th>
                <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
            </tr>
{% endif %}
{% endfor %}
{% endif %}
{% if associations.HasOne %}
{% for alias, details in associations.HasOne %}
            <tr>
                <th scope="row"><?= __('{{ alias|underscore|singularize|humanize }}') ?></th>
                <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
            </tr>
{% endfor %}
{% endif %}
{% if groupedFields.number %}
{% for field in groupedFields.number %}
            <tr>
                <th scope="row"><?= __('{{ field|humanize }}') ?></th>
                <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
            </tr>
{% endfor %}
{% endif %}
{% if groupedFields.date %}
{% for field in groupedFields.date %}
            <tr>
                <th scope="row"><?= __('{{ field|humanize }}') ?></th>
                <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
            </tr>
{% endfor %}
{% endif %}
{% if groupedFields.boolean %}
{% for field in groupedFields.boolean %}
            <tr>
                <th scope="row"><?= __('{{ field|humanize }}') ?></th>
                <td><?= ${{ singularVar }}->{{ field }} ? __('Yes') : __('No'); ?></td>
            </tr>
{% endfor %}
{% endif %}
     
{% if groupedFields.text %}
{% for field in groupedFields.text %}
    <tr>
        <th scope="row"><?= __('{{ field|humanize }}') ?></th>
       <td> <?= $this->Text->autoParagraph(h(${{ singularVar }}->{{ field }})); ?></td>
     </tr>
{% endfor %}
{% endif %}
  </table>
    </div>

{# PB: Fine Dati Tabella Principale #}

{#{%set relations1 = associations.BelongsToMany|merge(associations.BelongsToMany) %}


    {{ dump(relations1) }} #}


{# PB: Costruisco i tab #}
 <ul class="nav nav-tabs" role="tablist">
 <?php $tabact=1; ?>    

{% for kinds, relations in  associations %}
{% if kinds in ['HasMany','BelongsToMany'] %}    
{% for alias, details in relations %}
{% set otherSingularVar = alias|variable %}
{% set otherPluralHumanName = details.controller|underscore|humanize %}

<?php $activetab=''; ?>
<?php if (($return['tab']=='{{otherSingularVar}}' or $return['tab']=='') and ($tabact==1)) {$activetab='active'; $tabact=0;}; ?>
       
<li class='nav-item'>
    <a class ="nav-link <?= $activetab ?>" href="#{{ otherPluralHumanName }}" aria-controls=" ${{ otherPluralHumanName }}" role="tab" data-toggle="tab">{{ otherPluralHumanName }}</a>

</li>

{% endfor %}
{% endif %}   
{% endfor %}
 </ul>
{# PB: Costruisco il contenuto dei tab #}
<?php $tabact=1; ?>
<div class="tab-content">
{% for kinds, relations in  associations %}
{% if kinds in ['HasMany','BelongsToMany'] %}        
{% for alias, details in relations %}
{% set otherSingularVar = alias|variable %}
{% set otherPluralHumanName = details.controller|underscore|humanize %}

<?php $activetab=''; ?>
<?php if (($return['tab']=='{{ otherSingularVar }}' or $return['tab']=='') and ($tabact==1)) {$activetab='active'; $tabact=0;}?>
<div role='tabpanel' class='tab-pane <?= $activetab ?>' id='{{ otherPluralHumanName }}' >
   <div class="related">
 <div class="col btn-group" role="group"> 
    <?= $this->Form->postButton('', ['controller' => '{{ otherPluralHumanName }}', 'action' => 'add'],['data'=>['returncontroller'=>'{{ pluralVar }}','returnsaveme' => '0','returnaction'=>'view','returncontrollerid'=>${{ singularVar }}->{{ details.primaryKey[0] }}], 'class' => 'btn btn-sm btn-info bi-plus m-1']) ?>
{% if kinds in ['BelongsToMany'] %} 
     <?= $this->Form->postButton('', ['controller' => '{{ otherPluralHumanName }}', 'action' => 'indexexternal'],['data'=>['returncontroller'=>'{{ pluralVar }}', 'returnmodel'=>'{{modelClass}}','returnsaveme' => '0','returncontrollerid'=>${{ singularVar }}->{{ details.primaryKey[0] }}], 'class' => 'btn btn-sm btn-info bi-search m-1']) ?>
 {% endif %}     
       </div>
      <div class="col">
        <?php if (!empty(${{ singularVar }}->{{ details.property }})): ?>

    
        <div class="table-responsive">
            <table class="table table-striped table-sm" id="{{ otherPluralHumanName }}Table">
                <tr>
                    <th scope="col" class="actions"></th>
{% for field in details.fields %}
                    <th scope="col"><?= __('{{ field|humanize }}') ?></th>
{% endfor %}
 {% set otherPk = '$' ~ otherSingularVar ~ '->' ~ details.primaryKey[0] %}                  
                </tr>
                <?php foreach (${{ singularVar }}->{{ details.property }} as ${{ otherSingularVar }}): ?>
                <tr class="{{ otherPluralHumanName }}_id_<?= {{ otherPk|raw }} ?>">
                                        <td class="actions" style="width:1%">
                           <div class="btn-group" role="group" >

                <?= $this->Html->link('',  ['controller' => '{{ details.controller }}', 'action' => 'view', {{ otherPk|raw }}], ['title' => __('View'), 'class' => 'btn btn-outline-dark btn-sm bi-info-lg mr-1']) ?>
                <?= $this->Form->postButton('', ['controller' => '{{ details.controller }}', 'action' => 'edit', {{ otherPk|raw }}],['data'=>['returncontroller'=>'{{ pluralVar }}','returnsaveme' => '0','returnaction'=>'view','returncontrollerid'=>${{ singularVar }}->{{ details.primaryKey[0] }}], 'class' => 'btn btn-outline-dark btn-sm bi-pencil mr-1 rounded-0']) ?>
                <button class="btn btn-sm btn-danger bi-trash mr-1" title="Elimina" onclick='Remove({from: "{{ otherPluralHumanName }}", fromid : "<?= {{ otherPk|raw }} ?>"})'></button>
                {% if kinds in ['BelongsToMany'] %} 
                <button class="btn btn-sm btn-danger bi-eraser mr-1" title="Rimuovi Collegamento" onclick='RemoveHABTM({from: "{{ otherPluralHumanName }}", sourceid : "<?= {{ pK|raw }} ?>", modelsource: "{{modelClass}}", fromid : "<?= {{ otherPk|raw }} ?>"})'></button>
                {% endif %}  
              </div>
                                        
                                        
                                        
                                        </td>
{% for field in details.fields %}
                    <td><?= h(${{ otherSingularVar }}->{{ field }}) ?></td>
{% endfor %}


                </tr>
                <?php endforeach; ?>
            </table>
        </div>
        <?php endif; ?>
        </div>
    </div>
 </div>                        
{% endfor %}
{% endif %}   
{% endfor %}
</div>





</div>
